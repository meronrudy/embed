{"$message_type":"diagnostic","message":"unused imports: `EmbeddedError` and `EmbeddedResult`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/fixed_point.rs","byte_start":286,"byte_end":299,"line_start":7,"line_end":7,"column_start":20,"column_end":33,"is_primary":true,"text":[{"text":"use crate::error::{EmbeddedError, EmbeddedResult};","highlight_start":20,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"snn-core-plus/src/fixed_point.rs","byte_start":301,"byte_end":315,"line_start":7,"line_end":7,"column_start":35,"column_end":49,"is_primary":true,"text":[{"text":"use crate::error::{EmbeddedError, EmbeddedResult};","highlight_start":35,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/fixed_point.rs","byte_start":267,"byte_end":318,"line_start":7,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"use crate::error::{EmbeddedError, EmbeddedResult};","highlight_start":1,"highlight_end":51},{"text":"use core::{fmt, ops};","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `EmbeddedError` and `EmbeddedResult`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/fixed_point.rs:7:20\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse crate::error::{EmbeddedError, EmbeddedResult};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Deque`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/embedded_memory.rs","byte_start":401,"byte_end":406,"line_start":11,"line_end":11,"column_start":34,"column_end":39,"is_primary":true,"text":[{"text":"use heapless::{Vec, FnvIndexMap, Deque};","highlight_start":34,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/embedded_memory.rs","byte_start":399,"byte_end":406,"line_start":11,"line_end":11,"column_start":32,"column_end":39,"is_primary":true,"text":[{"text":"use heapless::{Vec, FnvIndexMap, Deque};","highlight_start":32,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Deque`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/embedded_memory.rs:11:34\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse heapless::{Vec, FnvIndexMap, Deque};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `FnvIndexMap`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/embedded_network.rs","byte_start":499,"byte_end":510,"line_start":12,"line_end":12,"column_start":21,"column_end":32,"is_primary":true,"text":[{"text":"use heapless::{Vec, FnvIndexMap, Deque};","highlight_start":21,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/embedded_network.rs","byte_start":497,"byte_end":510,"line_start":12,"line_end":12,"column_start":19,"column_end":32,"is_primary":true,"text":[{"text":"use heapless::{Vec, FnvIndexMap, Deque};","highlight_start":19,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `FnvIndexMap`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/embedded_network.rs:12:21\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse heapless::{Vec, FnvIndexMap, Deque};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused imports: `EmbeddedLIFNeuron`, `EmbeddedTopology`, `NetworkStatistics`, and `embedded_memory::EmbeddedSpikeBuffer`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":390,"byte_end":407,"line_start":9,"line_end":9,"column_start":39,"column_end":56,"is_primary":true,"text":[{"text":"    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},","highlight_start":39,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":446,"byte_end":462,"line_start":10,"line_end":10,"column_start":37,"column_end":53,"is_primary":true,"text":[{"text":"    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},","highlight_start":37,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":464,"byte_end":481,"line_start":10,"line_end":10,"column_start":55,"column_end":72,"is_primary":true,"text":[{"text":"    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},","highlight_start":55,"highlight_end":72}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":488,"byte_end":524,"line_start":11,"line_end":11,"column_start":5,"column_end":41,"is_primary":true,"text":[{"text":"    embedded_memory::EmbeddedSpikeBuffer,","highlight_start":5,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused imports","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":388,"byte_end":407,"line_start":9,"line_end":9,"column_start":37,"column_end":56,"is_primary":true,"text":[{"text":"    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},","highlight_start":37,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":373,"byte_end":374,"line_start":9,"line_end":9,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},","highlight_start":22,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":407,"byte_end":408,"line_start":9,"line_end":9,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},","highlight_start":56,"highlight_end":57}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":444,"byte_end":481,"line_start":10,"line_end":10,"column_start":35,"column_end":72,"is_primary":true,"text":[{"text":"    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},","highlight_start":35,"highlight_end":72}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":432,"byte_end":433,"line_start":10,"line_end":10,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},","highlight_start":23,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":481,"byte_end":482,"line_start":10,"line_end":10,"column_start":72,"column_end":73,"is_primary":true,"text":[{"text":"    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},","highlight_start":72,"highlight_end":73}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":482,"byte_end":524,"line_start":10,"line_end":11,"column_start":73,"column_end":41,"is_primary":true,"text":[{"text":"    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},","highlight_start":73,"highlight_end":74},{"text":"    embedded_memory::EmbeddedSpikeBuffer,","highlight_start":1,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused imports: `EmbeddedLIFNeuron`, `EmbeddedTopology`, `NetworkStatistics`, and `embedded_memory::EmbeddedSpikeBuffer`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/rtic_support.rs:9:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    embedded_network::{EmbeddedSNN, EmbeddedTopology, NetworkStatistics},\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    embedded_memory::EmbeddedSpikeBuffer,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `Queue`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":602,"byte_end":607,"line_start":14,"line_end":14,"column_start":28,"column_end":33,"is_primary":true,"text":[{"text":"use heapless::{Vec, spsc::{Queue, Producer, Consumer}};","highlight_start":28,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":602,"byte_end":609,"line_start":14,"line_end":14,"column_start":28,"column_end":35,"is_primary":true,"text":[{"text":"use heapless::{Vec, spsc::{Queue, Producer, Consumer}};","highlight_start":28,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `Queue`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/rtic_support.rs:14:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse heapless::{Vec, spsc::{Queue, Producer, Consumer}};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `AtomicBool`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":678,"byte_end":688,"line_start":15,"line_end":15,"column_start":48,"column_end":58,"is_primary":true,"text":[{"text":"use core::{marker::PhantomData, sync::atomic::{AtomicBool, AtomicU32, Ordering}};","highlight_start":48,"highlight_end":58}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":678,"byte_end":690,"line_start":15,"line_end":15,"column_start":48,"column_end":60,"is_primary":true,"text":[{"text":"use core::{marker::PhantomData, sync::atomic::{AtomicBool, AtomicU32, Ordering}};","highlight_start":48,"highlight_end":60}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `AtomicBool`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/rtic_support.rs:15:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse core::{marker::PhantomData, sync::atomic::{AtomicBool, AtomicU\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"unused import: `EmbeddedNeuron`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":374,"byte_end":388,"line_start":9,"line_end":9,"column_start":23,"column_end":37,"is_primary":true,"text":[{"text":"    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},","highlight_start":23,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: unused import: `EmbeddedNeuron`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/rtic_support.rs:9:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    embedded_neuron::{EmbeddedNeuron, EmbeddedLIFNeuron},\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/embedded_network.rs","byte_start":29087,"byte_end":29101,"line_start":681,"line_end":681,"column_start":13,"column_end":27,"is_primary":true,"text":[{"text":"        let mut new_spikes = self.process_active_budget(","highlight_start":13,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"snn-core-plus/src/embedded_network.rs","byte_start":29087,"byte_end":29091,"line_start":681,"line_end":681,"column_start":13,"column_end":17,"is_primary":true,"text":[{"text":"        let mut new_spikes = self.process_active_budget(","highlight_start":13,"highlight_end":17}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/embedded_network.rs:681:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m681\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut new_spikes = self.process_active_budget(\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----\u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mhelp: remove this `mut`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"method `apply_stdp` is never used","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/embedded_network.rs","byte_start":6079,"byte_end":6113,"line_start":192,"line_end":192,"column_start":1,"column_end":35,"is_primary":false,"text":[{"text":"impl<T: FixedPoint> EmbeddedSNN<T> {","highlight_start":1,"highlight_end":35}],"label":"method in this implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"snn-core-plus/src/embedded_network.rs","byte_start":24472,"byte_end":24482,"line_start":554,"line_end":554,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    fn apply_stdp(&mut self, pre_id: u16, post_id: u16, synapse_idx: usize) {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: method `apply_stdp` is never used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/embedded_network.rs:554:8\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m192\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl<T: FixedPoint> EmbeddedSNN<T> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mmethod in this implementation\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m554\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn apply_stdp(&mut self, pre_id: u16, post_id: u16, synapse_i\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"field `output_consumer` is never read","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":930,"byte_end":943,"line_start":24,"line_end":24,"column_start":12,"column_end":25,"is_primary":false,"text":[{"text":"pub struct RTICScheduler<T: FixedPoint + 'static> {","highlight_start":12,"highlight_end":25}],"label":"field in this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"snn-core-plus/src/rtic_support.rs","byte_start":1193,"byte_end":1208,"line_start":30,"line_end":30,"column_start":5,"column_end":20,"is_primary":true,"text":[{"text":"    output_consumer: Option<Consumer<'static, FixedSpike<T>, RTIC_SPIKE_QUEUE_SIZE>>,","highlight_start":5,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: field `output_consumer` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msnn-core-plus/src/rtic_support.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub struct RTICScheduler<T: FixedPoint + 'static> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12mfield in this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    output_consumer: Option<Consumer<'static, FixedSpike<T>, RTIC_\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"10 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 10 warnings emitted\u001b[0m\n\n"}
